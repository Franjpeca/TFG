run_id: "001" # Representa ejecucion global

training_datasets:
  - cleaned_46014_train_ordinal
  - cleaned_46025_train_ordinal
  - cleaned_46042_train_ordinal
  - cleaned_46053_train_ordinal
  - cleaned_46069_train_ordinal
  
test_datasets:
  - cleaned_46014_test_ordinal
  - cleaned_46025_test_ordinal
  - cleaned_46042_test_ordinal
  - cleaned_46053_test_ordinal
  - cleaned_46069_test_ordinal

cv_settings:
  n_splits: 2
  random_state: 32
#
model_parameters:
  LogisticAT:
    grid_001: # Representa combinacion de parametros
      param_grid:
        alpha: [0.1]
        max_iter: [500]

    grid_002: # Representa combinacion de parametros
      param_grid:
        alpha: [0.5]
        max_iter: [1000]
#
  LAD:
    grid_001:
      param_grid:
        C: [0.001]
        max_iter: [30000]
#
  LogisticIT:
    grid_001:
      param_grid:
        alpha: [0.001]
        max_iter: [1000]
#
  OrdinalRidge:
    grid_001:
      param_grid:
        alpha: [0.001, 5]
        max_iter: [1000]
#
  NNOP:
    grid_001:
      param_grid:
        hiddenN: [8, 16]
        lambdaValue: [0.01, 0.1, 1.0]
        iterations: [200, 500]
        epsilonInit: [0.005, 0.01]
#
  NNPOM:
    grid_001:
      param_grid:
        hiddenN: [8, 16, 32]
        lambdaValue: [0.001, 0.01, 0.1]
        iterations: [500, 800]
        epsilonInit: [0.01, 0.05]
#
  OrdinalDecomposition:
    grid_001:
      param_grid:
        base_classifier:
          - "sklearn.linear_model.LogisticRegression"
        parameters:
          - {max_iter: 1000, C: 1.0}
#
  REDSVM:
    grid_001:
      param_grid:
        c: [0.1]
        t: [0]
        d: [2]         
        g: [0.001]     
        r: [0.0]
        e: [0.01]
        h: [0]
        m: [128]
#
  SVOREX:
    grid_001:
      param_grid:
        c: [0.1, 1]
        kernel_type: [0, 2]
        k: [0.5, 1.0]
        p: [2, 3]
        t: [0.001, 0.01]


#cv_settings:
#  n_splits: 5
#  random_state: 32
#
#model_parameters:
#  LogisticAT:
#    grid_001: # Representa combinacion de parametros
#      param_grid:
#        alpha: [0.01, 0.1, 0.5]
#        max_iter: [500]
#
#  LAD:
#    grid_001:
#      param_grid:
#        C: [0.001, 0.01, 0.1]
#        max_iter: [30000, 40000, 150000, 1000000]
#
#  LogisticIT:
#    grid_001:
#      param_grid:
#        alpha: [0.001, 0.1]
#        max_iter: [1000, 10000]
#
#  OrdinalRidge:
#    grid_001:
#      param_grid:
#        alpha: [0.001, 0.01, 0.1, 1, 5]
#        max_iter: [1000, 10000]
#
#  NNOP:
#    grid_001:
#      param_grid:
#        hiddenN: [16, 32]
#        lambdaValue: [0.0001, 0.001]
#        iterations: [200]
#        epsilonInit: [0.01, 0.05]
#
#  NNPOM:
#    grid_001:
#      param_grid:
#        hiddenN: [8, 16]
#        lambdaValue: [0.01, 0.1]
#        iterations: [100, 200]
#        epsilonInit: [0.01]
#
#  OrdinalDecomposition:
#    grid_001:
#      param_grid:
#        base_classifier:
#          - "sklearn.linear_model.LogisticRegression"
#          - "sklearn.linear_model.LogisticRegression"
#        parameters:
#          - {max_iter: 1000, C: 1.0}
#          - {max_iter: 2000, C: 0.1}
#
#  REDSVM:
#    grid_001:
#      param_grid:
#        c: [0.1, 1.0]
#        t: [0, 2]
#        d: [2]              
#        g: [0.001, 0.01]    
#        r: [0.0]
#        e: [0.01]
#        h: [0]
#        m: [128, 256]
#
#  SVOREX:
#    grid_001:
#      param_grid:
#        c: [0.01, 0.1]
#        kernel_type: [0, 2]
#        k: [5]
#        p: [3]
#        t: [0.001, 0.01]