run_id: "001" # Representa ejecucion global

# Sirve como identificador, por eso solo se toman de los dataset de train
dataset_names:
  46014: "46014_train_ordinal"
  46025: "46025_train_ordinal"
  46042: "46042_train_ordinal"
  46053: "46053_train_ordinal"
  46069: "46069_train_ordinal"

preprocessing:
  drop_penultimate: true
  drop_empty_cols: true
  drop_duplicates: true
  drop_constant_cols: true


training_datasets:
  - cleaned_46014_train_ordinal
  - cleaned_46025_train_ordinal
  - cleaned_46042_train_ordinal
  - cleaned_46053_train_ordinal
  - cleaned_46069_train_ordinal
  
test_datasets:
  - cleaned_46014_test_ordinal
  - cleaned_46025_test_ordinal
  - cleaned_46042_test_ordinal
  - cleaned_46053_test_ordinal
  - cleaned_46069_test_ordinal

cv_settings:
  n_splits: 5
  shuffle: true
  random_state: 42

training_settings:
  n_jobs: -1
  seed: 46 



model_parameters:
  # =========================
  # Nominales
  # =========================
  LinearRegression:
    grid_001:
      param_grid:
        fit_intercept: [True]
        positive: [False]

  DecisionTreeRegressor:
    grid_001:
      param_grid:
        max_depth: [5, 10]
        min_samples_split: [2, 5]

  KNeighborsClassifier:
    grid_001:
      param_grid:
        n_neighbors: [3, 5, 7, 9]
        weights: ["uniform", "distance"]
        p: [1, 2]

  # =========================
  # MORD (modelos ordinales)
  # =========================
  LogisticAT:
    grid_001:
      param_grid:
        alpha: [0.01, 0.1, 1.0, 10.0]
        max_iter: [1000]

  LogisticIT:
    grid_001:
      param_grid:
        alpha: [0.01, 0.1, 1.0, 10.0]
        max_iter: [1000]

  LAD:
    grid_001:
      param_grid:
        C: [0.01, 0.1, 1.0, 10.0]
        max_iter: [30000]
        dual: ["auto"]

  OrdinalRidge:
    grid_001:
      param_grid:
        alpha: [0.01, 0.1, 1.0, 10.0]
        max_iter: [1000]

  # =========================
  # ORCA (modelos ordinales)
  # =========================
  NNOP:
    grid_001:
      param_grid:
        hiddenN: [8, 16]
        lambdaValue: [0.01, 0.1, 1.0]
        iterations: [800]
        epsilonInit: [0.001, 0.005]

  NNPOM:
    grid_001:
      param_grid:
        hiddenN: [8, 16, 32]
        lambdaValue: [0.001, 0.01, 0.1]
        iterations: [800]
        epsilonInit: [0.01, 0.05]

  OrdinalDecomposition:
    grid_001:
      param_grid:
        base_classifier:
          - "sklearn.linear_model.LogisticRegression"
        parameters:
          - {max_iter: 1000, C: 1.0}

  REDSVM:
    grid_001:
      param_grid:
        c: [0.1, 1.0, 10.0]
        t: [0]
        d: [2]
        g: [0.001, 0.01]
        r: [0.0]
        e: [0.01]
        h: [0]
        m: [128]

  SVOREX:
    grid_001:
      param_grid:
        c: [0.1, 1.0, 10.0]
        kernel_type: [0, 2]   # 0: linear, 2: RBF
        k: [1.0]
        p: [2, 3]
        t: [0.001, 0.01]

